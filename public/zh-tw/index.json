[{"categories":["菜單"],"content":"我們預定義了兩種類型的菜單：main 和 footer，分別表示頂部的應用程序欄菜單和頁腳菜單。 本文將簡要介紹如何使用菜單。\n菜單項屬性\r   屬性 類型 描述     name String 菜單名稱。   identifier String 菜單 ID。   weight Number 菜單的權重，用於升序排序。   parent String 上級菜單的 identifier。   url String 菜單的 URL。   pre String 菜單名稱的前置字符串。   post String 菜單名稱的拖尾字符串。   params Object 菜單參數。   params.divider Boolean true 表示分隔符。    請參閱 Menu Entry Properties\r。\n用法\r配置\r 菜單配置文件默認放在 config/_default/menu.toml。\n 讓我們以 main 菜單為例：\n1[[main]] 2 name = \u0026#34;FooBar\u0026#34; 3 identifier = \u0026#34;foobar\u0026#34; 4 weight = 1 5 pre = \u0026#39;\u0026lt;i class=\u0026#34;fas fa-fw fa-chevron-circle-down\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026#39; 6[[main]] 7 name = \u0026#34;Foo\u0026#34; 8 identifier = \u0026#34;foo\u0026#34; 9 parent = \u0026#34;foobar\u0026#34; 10 url = \u0026#34;https://github.com/razonyang/hugo-theme-bootstrap\u0026#34; 11 weight = 1 12[[main]] 13 parent = \u0026#34;foobar\u0026#34; 14 identifier = \u0026#34;foobar-divider\u0026#34; 15 weight = 2 16 [main.params] 17 divider = true 18[[main]] 19 name = \u0026#34;Bar\u0026#34; 20 identifier = \u0026#34;bar\u0026#34; 21 parent = \u0026#34;foobar\u0026#34; 22 url = \u0026#34;https://github.com/razonyang/hugo-theme-bootstrap/discussions/new\u0026#34; 23 weight = 3 如圖所示，我們創建一個名為 foobar 的頂級菜單，其包含了子菜單和分隔符。\nFront Matter\r我們也可以通過頁面的 Front Matter 配置菜單。\n1[menu.main] 2 parent = \u0026#34;support\u0026#34; 3 weight = 6 4[menu.footer] 5 parent = \u0026#34;support\u0026#34; 6 weight = 6 7 pre = \u0026#39;\u0026lt;i class=\u0026#34;fas fa-fw fa-quetion-circle\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026#39; 代碼片段將頁面追加到 main 和 footer 菜單。\n 不需要指定 url 和 name 參數。\n","date":"2021-12-16","img":"","permalink":"/zh-tw/posts/menu/","series":["檔案"],"tags":["主菜單","頁腳菜單"],"title":"菜單"},{"categories":["FAQ"],"content":"FAQ\r頁面是一個常見問題的集合。\n前置條件\r我們需要在 content 目錄下創建一個名為 faq/index.md 的頁面。\n1+++ 2title = \u0026#34;Frequently Asked Questions\u0026#34; 3layout = \u0026#34;faq\u0026#34; 4+++ 數據\r數據存放在 data 目錄，其目錄結構如下：\n1data 2 /en 3 /faq 4 foo.json 5 bar.json 6 /zh-cn 7 /faq 8 foo.json 9 bar.json 如你所看到的，我們按照語言對問題進行歸類。每個文件代表一組問題，它們有著以下相同的格式：\n1{ 2 \u0026#34;title\u0026#34;: \u0026#34;The group title\u0026#34;, 3 \u0026#34;weight\u0026#34;: 1, 4 \u0026#34;questions\u0026#34;: [ 5 { 6 \u0026#34;question\u0026#34;: \u0026#34;The question\u0026#34;, 7 \u0026#34;answer\u0026#34;: \u0026#34;The answer\u0026#34; 8 } 9 ] 10}  weight 參數用於將組按升序排序。 ","date":"2021-12-07","img":"","permalink":"/zh-tw/posts/faq/","series":["檔案"],"tags":[],"title":"FAQ 頁面"},{"categories":[""],"content":"本文將介紹如何安裝、升級本主題，以及書寫新的文章。\n安裝\r從頭開始創建站點\r1$ hugo new site myblog 2$ cd myblog 3$ git init 4$ git submodule add https://github.com/razonyang/hugo-theme-bootstrap themes/hugo-theme-bootstrap 5$ cp -a themes/hugo-theme-bootstrap/exampleSite/* . 6$ hugo server  如果你使用的是 Windows，請改用 xcopy .\\themes\\hugo-theme-bootstrap\\exampleSite /E。\n 安裝到已有站點\r1$ cd myblog 2$ git submodule add https://github.com/razonyang/hugo-theme-bootstrap themes/hugo-theme-bootstrap 3$ mkdir config 4$ cp -a themes/hugo-theme-bootstrap/exampleSite/config/* ./config 5$ cp -r themes/hugo-theme-bootstrap/exampleSite/content/about/ \\ 6 themes/hugo-theme-bootstrap/exampleSite/content/archives/ \\ 7 themes/hugo-theme-bootstrap/exampleSite/content/categories/ \\ 8 themes/hugo-theme-bootstrap/exampleSite/content/contact/ \\ 9 themes/hugo-theme-bootstrap/exampleSite/content/offline/ \\ 10 themes/hugo-theme-bootstrap/exampleSite/content/search/ \\ 11 themes/hugo-theme-bootstrap/exampleSite/content/series/ \\ 12 themes/hugo-theme-bootstrap/exampleSite/content/tags/ \\ 13 ./content 14$ hugo server  如果你重新尅隆倉庫，你將需要通過 git submodule update --init --recursive 更新 submodule，或者 git clone --recursive \u0026lt;repo\u0026gt;。\n 升級\r1$ cd themes/hugo-theme-bootstrap 2$ git fetch 3$ git checkout [version] 4$ cd ../../ 5$ git add themes/hugo-theme-bootstrap 6$ git commit -m \u0026#39;Upgrade the theme\u0026#39;  將 [version] 替換為最新的版本。所有版本可以通過 git tag -l | sort -rV 列出。 你也可以直接使用 master 分支以獲取最新的提交。  書寫文章\r 假設默認語言為 en。\n 1$ hugo new posts/new-post/index.md 上述命令創建了一篇英文文章，同樣的，我們也可以創建一篇簡體中文的文章：\n1$ hugo new posts/new-post/index.zh-cn.md  請注意：創建的文章一般處於草稿狀態，本地預覽時，hugo server 需要指定 -D 參數才能預覽草稿文章。文章發佈時，需要將 draft 改為 false，或者直接移除 draft 參數。\n  你可以將文章放在任何地方，比如 blog，只需要將 blog 附加到 mainSections 參數：mainSections = [\u0026quot;posts\u0026quot;, \u0026quot;blog\u0026quot;]。\n 下一步\r 調整配置\r 菜單\r 觀感\r ","date":"2021-12-04","img":"","permalink":"/zh-tw/posts/getting-started/","series":["檔案"],"tags":["安裝","升級"],"title":"快速入門"},{"categories":[""],"content":"Image viewer is an image gallery, it will be shown up when you click a non-linkable image.\nIt also provides many tools, such as zoom in, zoom out and rotate.\n The author avatar was filtered by default.\n Site Parameters\rImage Viewer was turned on by default, you can turn it off by setting the parameter viewer as false.\nOptions\rYou can tweak the options by creating assets/js/viewer.config.js.\n1window.viewerOptions = { 2 className: \u0026#34;image-viewer\u0026#34;, 3 // ... 4}; Avialable options are listed on Viewer.js Options\r.\n","date":"2021-12-03","img":"","permalink":"/zh-tw/posts/image-viewer/","series":["檔案"],"tags":[],"title":"圖片查看器"},{"categories":[],"content":"默認情况下，使用此主題的網站具有預設字體、顏色和總體外觀。 但是，默認方案不可能滿足所有人的要求，但是不要擔心，你可以輕鬆地覆蓋主題預設值，例如調色板顏色、字體、語法高亮。\n調色板\r主題的調色板系統基於 CSS 變量，因此，我們可以輕松地為每個調色板自定義顏色。\n我們以一個例子進行說明。\n1[data-palette=blue] { 2 --hbs-primary: darkblue; 3 --hbs-on-primary: #fff; 4} 字體\rFont Family\r我們不指定任何字體，所以大部分瀏覽器將會使用 system-ui 。\n你也可以輕易地使用其他 web 字體，比如 Google Fonts\r。我們以 Roboto 字體為例。\n首先，我們通過 customCSS 導入字體：\n1customCSS = [ 2 \u0026#34;https://fonts.googleapis.com/css2?family=Roboto\u0026amp;display=swap\u0026#34; 3] 然後在 assets/css/custom.css 覆蓋 --hbs-body-font-family 變量：\n1:root { 2 --hbs-body-font-family: \u0026#39;Roboto\u0026#39;, sans-serif; 3} 語法高亮\r本主題要求以下參數設置為特定值。\n lineNos: true lineNumbersInTable: false noClasses: false  另外可參閱 Configure Highlight\r。\n样式\r1$ hugo gen chromastyles --style=solarized-dark \u0026gt; assets/css/highlight.css 另外可參閱所有支持的樣式\r。\n圖標\r為了減少圖標的文件大小，我們使用自定義的 Font Awesome\r圖標集。 正因如此，你可以自由地選擇其他圖標。\nFont Awesome\r自定義構建\r 本章節包含前端技術，比如 JavaScript 和 npm。\n 我們提供一個名為 assets/js/icons.js 的文件，以便自定義圖標，因此，你可以按需添加圖標。 我們已為你在示例站點設置好了構建環境。\n 安裝依賴  1$ npm install 在 src/icons/index.js 添加圖標：  1import { faGlobe, faClock } from \u0026#39;@fortawesome/free-solid-svg-icons\u0026#39;; 2 3library.add(faGlobe, faClock); 重建 assets/js/icons.js：  1$ npm run build 如果你熟悉前端開發，推薦使用此方法添加圖標。\nCustomJS\r因為本主題使用 JS+SVG 框架以替換圖標為 SVG，所以 customCSS 將會無效，你需要使用 customJS 替代。\n1customJS = [ 2 \u0026#34;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5.15.4/js/solid.min.js\u0026#34; # Import solid icons. 3 #\u0026#34;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5.15.4/js/regular.min.js\u0026#34; # Import regular icons. 4 #\u0026#34;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5.15.4/js/brands.min.js\u0026#34; # Import brand icons. 5 #\u0026#34;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5.15.4/js/all.min.js\u0026#34; # Import the full icon set. 6] 其他\r其他圖標可以通過 customCSS，customJS 或 鉤子\r導入。\n Iconify\r Bootstrap Icons\r Material Design Icons\r ","date":"2021-12-03","img":"","permalink":"/zh-tw/posts/look-and-feel/","series":["檔案"],"tags":["顏色","調色板","字體","語法高亮","圖標"],"title":"觀感"},{"categories":["PWA"],"content":"PWAs(漸進式 web 應用程序\r) 是使用一些特定的科技和標準模式開發的，允許它們同時利用 web 和本機應用程序功能。\n我們正處於 PWA 的實驗階段，但添加了一些主要功能，如將網站安裝到主荧幕、預緩存檔案和離線可用。\n站点配置\r首先，我們需要指定 pwa 參數，即使為空。\n   名稱 類型 預設值 描述     pwa Object -    pwa.manifest Object - Web app manifest\r   pwa.manifest.name String - 默認為站點標題   pwa.manifest.short_name String - 站點短名稱   pwa.manifest.display String standalone    pwa.manifest.description String - 默認為站點描述   pwa.manifest.theme_color String -    pwa.manifest.background_color String -    pwa.manifest.icons Arrary -    pwa.manifest.icons.sizes String - 圖標尺寸，如：\u0026ldquo;96x96\u0026rdquo;   pwa.manifest.icons.src String - 圖標 URL    Manifest\r接著，我們在設定檔中添加一個名為 MANIFEST 的自定義輸出格式，以便讓我們的網站可安裝。\n1[mediaTypes] 2 [mediaTypes.\u0026#34;application/manifest+json\u0026#34;] 3 suffixes = [\u0026#34;json\u0026#34;] 4 5[outputFormats] 6 [outputFormats.MANIFEST] 7 name = \u0026#34;manifest\u0026#34; 8 baseName = \u0026#34;manifest\u0026#34; 9 mediaType = \u0026#34;application/manifest+json\u0026#34; 然後在 home 輸出追加 MANIFEST。\n1[outputs] 2 home = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;, \u0026#34;MANIFEST\u0026#34;]  Hugo 會在網站根目錄生成 manifest.json。\n 離線\r如果在沒有網絡的情况下請求新頁面，將顯示離線頁面。\n我們需要在 content 目錄中創建一個名為 offline/index.md 的離線頁面，其首要內容如下。\n1+++ 2title = \u0026#39;Offline\u0026#39; 3layout = \u0026#39;offline\u0026#39; 4+++ 預載\r現時，我們還沒有提供任何預緩存自定義檔案的方法。 如果您需要此功能，請隨時通知我們。\n","date":"2021-12-03","img":"","permalink":"/zh-tw/posts/pwa/","series":["檔案"],"tags":["Manifest","Offline"],"title":"漸進式 Web 應用程序"},{"categories":["搜索"],"content":"如果您的網站中有許多文章，讀者可能很難檢索到文章，因此，我們添加了搜索功能。\n前置條件\r首先，我們需要在設定檔的 home 輸出格式中追加 JSON。\n1[outputs] 2 home = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;]  此步驟生成一個索引檔案 index.json，以便 JavaScript 可以檢索內容。\n 然後，在 content 目錄下創建一個名為 search/_ index.md 的頁面。\n網站參數\r   名稱 類型 預設值 描述     search Object - 搜尋配置。   search.paginate Integer 10 分頁。   search.resultContentWordCount Integer 240 搜尋結果內容最大字數。   search.fuse Object - Fuse.js 引數\r   search.fuse.ignoreLocation Boolean true    search.fuse.location Integer -    search.fuse.isCaseSensitive Boolean -    search.fuse.minMatchCharLength Integer -    search.fuse.threshold Double -    search.fuse.distance Integer -    search.fuse.useExtendedSearch Boolean -    ","date":"2021-12-03","img":"","permalink":"/zh-tw/posts/search/","series":["檔案"],"tags":[],"title":"搜索頁面"},{"categories":["歸檔"],"content":"歸檔頁面按照年份對文章進行歸檔。\n前置條件\rWe need to create a page called archives/_index.md in the content directory.\n1+++ 2title = \u0026#34;歸檔\u0026#34; 3layout = \u0026#34;archive\u0026#34; 4+++ 網站參數\r   名稱 類型 預設值 描述     archive Object - Archive.   archive.paginate Integer 100 Archive pagination.   archive.dateFormat Integer Jan 2 Archive date format.   ","date":"2021-12-03","img":"","permalink":"/zh-tw/posts/archives/","series":["檔案"],"tags":[],"title":"歸檔頁面"},{"categories":["小部件"],"content":"作者小部件位於側邊欄，用於簡要地自我介紹。\n網站配置\r默認地，設定檔位於 config/_ default/author.toml。\n你可以通過移除 author 配置禁用小部件。\n   名稱 類型 預設值 描述     author Object - 個人檔案。   author.name String - 名稱。   author.avatar String images/profile.webp 頭像。   author.bio String - 簡介。   author.company String - 公司。   author.location String - 地理位置。   author.about String - “關於我”的外部頁面，如果未設定，則使用內部的“關於我”的頁面。   author.params Object -    author.params.layout String - 可選值：compact。   author.social Object - 社交連結\r。   ","date":"2021-12-03","img":"","permalink":"/zh-tw/posts/widgets/author/","series":["檔案"],"tags":[],"title":"作者小部件"},{"categories":["小部件"],"content":"打賞小部件，又稱buy me a coffee小部件，其通過使用捐贈或小費，為讀者提供了一種支持創作者的筦道。\n網站參數\rreward 參數是從平臺映射到二維碼影像的鍵值對，因此支持任何支持二維碼的平臺。\n   名稱 類型 預設值 描述     reward Object - 打賞。   reward.alipay String - 支付寶收款二維碼圖片。   reward.wechat String - 微信收款/打賞二維碼圖片。    頁面配置\r   名稱 類型 預設值 描述     reward Boolean true 是否開啟打賞小部件   ","date":"2021-12-03","img":"","permalink":"/zh-tw/posts/widgets/reward/","series":["檔案"],"tags":[],"title":"打賞小部件"},{"categories":["社交連結"],"content":"社交連結social參數是一組平臺映射到用戶標識的鍵值對。 其支持很多熱門的社交平臺，比如Twitter、Facebook、Reddit、GitHub。 本文列出了所有受支持的平臺，及其使用方法。\n使用方法\r一共有兩處地方可以放置社交鏈接，一個是作者小部件\r，另一個是頁腳。\n作者小部件\r編輯 config/_default/author.toml 文件，並填寫以下配置：\n1[social] 2 email = \u0026#34;user@domain.tld\u0026#34; 3 github = \u0026#34;githubusername\u0026#34; 頁腳\r建立 config/_default/social.toml 檔案，並填寫以下配置：\n1email = \u0026#34;user@domain.tld\u0026#34; 2github = \u0026#34;githubusername\u0026#34; 平臺\r   平臺 使用者標識     email 電子郵箱   facebook Facebook 使用者名稱   facebookgroup Facebook 群組名   github GitHub 使用者名稱   gitlab GitLab 使用者名稱   instagram Instagram 使用者名稱   linkedin LinkedIn 使用者名稱   quora Quora 使用者名稱   stackoverflow Stack Overflow 使用者 ID   tumblr Tumblr 使用者名稱   twitter Twitter 使用者名稱   weibo 微博使用者名稱   zhihu 知乎使用者名稱   reddit Reddit 使用者名稱   telegram Telegram 使用者名稱   qq QQ 號   dockerhub Docker Hub 使用者名稱   bitbucket Bitbucket Workspace ID   kaggle Kaggle 使用者名稱   medium Medium 使用者名稱或自定義域名（比如：https://custom.domain.tld）   lastfm Last.fm 使用者名稱   bibibili BiliBili 使用者 ID   youtube Youtube 頻道 ID   discord Discord 邀請碼   discourse 論壇 URL   tiktok TikTok 使用者名稱   pinterest Pinterest 使用者名稱   ","date":"2021-12-02","img":"","permalink":"/zh-tw/posts/widgets/social-links/","series":["檔案"],"tags":[],"title":"社交連結"},{"categories":["聯繫表單"],"content":"我們可以將郵寄地址放在 社交連結\r上，以便讀者聯繫我們。 但不幸的是，郵件或多或少會被當成垃圾郵件，甚至被過濾。 因此我們帶來了一個聯系表單的功能。\n前置條件\r我們需要在 content 目錄創建一個名為 contact/index.md 的頁面，以至於我們可以訪問聯系表單頁面。\n1+++ 2title = \u0026#34;Contact Us\u0026#34; 3layout = \u0026#34;contact\u0026#34; 4+++ 一旦創建，連結將出現在簡介小部件中。\n參數\r   名稱 類型 默認值 說明     contact Object -    contact.endpoint String - 請參閱 後端\r。   contact.file Boolean false 開啟/禁用文件上傳。   contact.fileField String - 文件字段名稱。    後端\r其被設計成可以相容大部分後端，比如：Netlify form\r、Getform\r和 Formspree\r。\nNetlify\rNetlify form\r可開箱即用，囙此，你無需指定 contact.endpoint 參數。\n 演示網站使用 Getform 而不是 Netlify form，因為當你超過當前套餐限定時，Netlify 會自動升級你的套餐，這會導致額外的支出。\n  如果你打算使用 Netlify form，請確保 contact.endpoint 參數為空。\n 其他\r我們以 Getform\r為例：\n1[contact] 2 endpoint = \u0026#34;YOUR_ENDPOINT\u0026#34; ","date":"2021-11-30","img":"","permalink":"/zh-tw/posts/contact-form/","series":["檔案"],"tags":["Netlify","Getform"],"title":"聯繫表單"},{"categories":["資源"],"content":"作為一個可定制的主題，其提供了定制資源的能力，無論是定制 CSS 和 JS，還是引入第三方 CSS 和 JS。\n內部資源\r你只需要創建和編輯 assets/css/custom.css 和 assets/js/custom.js 即可。\n 這些檔案會被打包成單個 CSS/JS 檔案，以減少 HTTP 的請求次數。\n 外部資源\r任意的 CSS 和 JS 資源都可以通過 customCSS 和 customJS 引數進行引入。\n1customCSS = [ 2 \u0026#34;external-foo.css\u0026#34;, 3 \u0026#34;external-bar.css\u0026#34; 4] 5 6customJS = [ 7 \u0026#34;external-foo.js\u0026#34;, 8 \u0026#34;external-bar.js\u0026#34; 9] ","date":"2021-11-28","img":"","permalink":"/zh-tw/posts/custom-assets/","series":["檔案"],"tags":["CSS","JS"],"title":"自定義資源"},{"categories":["鉤子"],"content":"作為一個靈活的主題，它應該能够自定義程式碼和集成協力廠商服務。因此，我們帶來了一個叫做鉤子的特性。\n在本文中，我們將介紹所有鉤子並提供一些用例。\n總覽\r   鉤子 描述     head-end \u0026lt;head\u0026gt; 結束之前   body-end \u0026lt;body\u0026gt; 結束之前   main-begin \u0026lt;main\u0026gt; 上方   main-end \u0026lt;main\u0026gt; 下方   list-begin 文章列表上方   list-end 文章列表上方   sidebar-begin 側邊欄上方   sidebar-end 側邊欄下方   content-begin 文章內容上方   content-end 文章內容下方   comments-begin 評論上方   comments-end 評論下方   footer-begin footer 上方   footer-end footer 下方   post-panel-begin 文章工具欄上方   post-panel-end 文章工具欄下方    用法\r使用鉤子很容易，你需要做的是在 layouts/partials/hooks 目錄中創建一個與鉤子同名的 HTML 檔案。\n以 sidebar-begin 為例：\n1echo \u0026#39;\u0026lt;section class=\u0026#34;row card component text-center\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;card-body\u0026#34;\u0026gt;SIDEBAR BEGIN\u0026lt;/div\u0026gt;\u0026lt;/section\u0026gt;\u0026#39; \\ 2 \u0026gt; layouts/partials/hooks/sidebar-begin.html ","date":"2021-11-27","img":"","permalink":"/zh-tw/posts/hooks/","series":["檔案"],"tags":[],"title":"鉤子"},{"categories":[],"content":"我們很樂意傾聽你的意見和反饋，也歡迎你參與進來。\n社區\r 特性請求\r Bug 反饋\r 討論\r: 提問題、分享想法等。  貢獻\r歡迎任何貢獻，如檔案、Bug 修復和新功能。\n規則\r鑒於易於維護的考慮，我們制定了一些規則。\nConventional Commits Specification\r請遵循 Conventional Commits Specification\r。\n比如：\n Bug 修復：fix: correct typos 新特性：feat: add the foobar parameter 檔案：docs: document the foobar parameter 樣式：style: change the background color to blue 重建資源：chore: rebuild assets  開發\r本主題依賴 npm 和 webpack，用於生成資源文件：JS、CSS、字體等。\n 其源碼放在 src 目錄。\n 安裝依賴\r1$ npm install 重建資源\r1$ npm run build  npm run watch 會在文件改動時重建資源。\n 預覽\r1$ npm run serve ","date":"2021-11-27","img":"","permalink":"/zh-tw/posts/get-involved/","series":["檔案"],"tags":[],"title":"參與我們"},{"categories":["評論","小部件"],"content":"Disqus\r和 Utterances\r評論小部件都是開箱即用的。本文將展示如何配置它們，甚至自定義你自己的評論小部件。\nDisqus\rDisqus\r評論小部件由 Hugo 支持。\n1disqusShortname = \u0026#34;yourdiscussshortname\u0026#34;  請注意：disqusShortname 是站點配置，而非參數。將其放在 params 是行不通的。\n Utterances\rUtterances\r是一個基於 GitHub issue 的輕量級評論小部件。\n1[utterances] 2 repo = \u0026#34;user/repo\u0026#34; 3 #issueTerm = \u0026#34;pathname\u0026#34; # pathname, url, title, og:title. 4 #label = \u0026#34;comment\u0026#34; # Optional. 5 #theme = \u0026#34;\u0026#34;  不同於 Disqus，Utterances 是一個參數。請將其放置在 params。\n 參數\r   名稱 類型 默認值 描述     utterances.repo String - GitHub 倉庫。   utterances.issueTerm String pathname 文章和 issue 之間的映射： pathname   utterances.label String - 此標籤會分配給 Utterances 創建的 issue。   utterances.theme String - 如果未設置任何主題，亮色和暗色模式會分別使用 github-light 和 github-dark。 可選值： github-light, github-dark, preferred-color-scheme, github-dark-orange, icy-dark, dark-blue 和 photon-dark。    故障排查\r 確保倉庫是公開的，否則讀者無法查看評論。 確保倉庫已經安裝了 utterances app\r，否則用戶無法發表評論。 如果你的倉庫是尅隆的，請在設定中確保已經啟用了 issues 功能。  自定義評論小部件\r我們不打算支持所有的評論小部件，但別擔心，你完全可以自定義評論小部件。\n 在創建自己的評論小部件之前，需要禁用其他評論小部件。\n 1mkdir -p layouts/partials/post/comments 2echo \u0026#34;MY COMMENTS WIDGET\u0026#34; \u0026gt; layouts/partials/post/comments/custom.html 期間，你很可能需要引入協力廠商資源，不過這可以通過 自定義資源\r或 鉤子\r輕鬆解决。\n","date":"2021-11-27","img":"","permalink":"/zh-tw/posts/widgets/comments/","series":["檔案"],"tags":["Disqus","Utterances"],"title":"評論小部件"},{"categories":["配置"],"content":"如示例站點所示，我們使用 Configuration Directory\r為了維護更簡單的組織和特定於環境的設置，它在多語言站點上特別有用。\n站點配置\r 站點配置文件默認為 config/_default/config.toml。\n    名稱 類型 默認值 說明     title String - 站點標題   baseURL String - 站點 URL   copyright String - 站點版權。{year} 占位符會被替換為當前年份。   defaultContentLanguage String en    defaultContentLanguageInSubdir Boolean false    paginate Integer 10    paginatePath String page    enableRobotsTXT Boolean true    disqusShortname String - Disqus\rshortname。   googleAnalytics String - Google Analytics.   social Object - 社交鏈接\r。   author Object - 作者小部件\r。    請參閱 All Configuration Settings\r。\n站點參數\r 站點參數文件默認為 config/_default/params.toml。\n    名稱 類型 默認值 說明     Page      mainSections Array [\u0026quot;posts\u0026quot;] 主要的 sections   titleCase Boolean false 標題首字母是否大寫   titleSeparator String - 標題分隔符   comment Boolean true 是否開啟評論   toc Boolean true 是否開啟目錄   tocWordCount Integer 280 僅當文章的字數超過此值時，才會顯示目錄。   breadcrumb Boolean true 是否開啟面包屑導航   dateFormat String Jan 2, 2006 日期格式。 查閱 Hugo Date and Time Templating Reference\r以獲取詳細信息。   poweredBy Boolean true 是否顯示技術支持。   readingTime Boolean true 是否顯示閱讀時間   postDate Boolean true 是否顯示發表日期   math Boolean false 是否開啟 math。   diagram Boolean false 是否開啟 diagram。   logo String/Boolean images/logo.webp Logo。設置為 false 以禁用 Logo。   brand String - Brand   description String - 站點描述   keywords String - 站點關鍵詞   color String - 顏色風格， light，dark 或者 dynamic（默認）。   palette String - 默認配色，清理 Cookie 後生效。   palettes Array ALL 可選配色，如需禁用此選項，可將其設為空值 []。   featuredPostCount Integer/Boolean 5 精選文章數，false 則隱藏。   recentPostCount Integer/Boolean 5 最近文章數，false 則隱藏。   relatedPostCount Integer/Boolean 5 相關文章數，false 則隱藏。   categoryCount Integer/Boolean 10 分類數，false 則隱藏。   tagCount Integer/Boolean 10 標簽數，false 則隱藏。   seriesCount Integer/Boolean 10 專欄數，false 則隱藏。   taxonomyPaginate Integer 10    taxonomyPostCount Integer 3 分類的列表文章數，false 則隱藏。   countTaxonomyPosts Boolean false 是否顯示分類的文章總數。   fullWidth Boolean false 是否全寬   fixedHeader Boolean true 是否固定頭部   reward Object - 打賞小部件\r，又稱 Buy Me a Coffee 小部件。   share Object - 分享按鈕   share.addThis String - AddThis\rpubid。   fontSize Object 字體大小 註釋或刪除此參數可以禁用字體大小切換器。   fontSize.small String .9rem 小字體   fontSize.extraSmall String .8rem 更小的字體   fontSize.large String 1.1rem 大字體   fontSize.extraLarge String 1.2rem 更大的字體   socialShare Boolean true 啟用/禁用內置的分享按鈕   searchBar Boolean true 啟用/禁用搜索欄   Archive      archive Object - 歸檔\r。   search Object - 搜索\r。   Webmaster Site Verification      siteVerification Object -    siteVerification.google String - Google   siteVerification.bing String - Bing   siteVerification.baidu String - 百度   siteVerification.baiduUnion String - 百度聯盟   siteVerification.so String - 360   siteVerification.sogou String - 搜狗   siteVerification.shenma String - 神馬   Analytics      analytics Object - Analytics.   analytics.baidu String - 百度統計   Others      googleAdsense String - Google Adsense。   customCSS Array - 自定義 CSS， 主要用於導入外部。 請查閱自定義資源\r。   customJS Array - 自定義 JS， 主要用於導入外部 JS。 請查閱自定義資源\r。   utterances Object - Utterances\r配置。   Creative Commons License      creativeCommons Object -    creativeCommons.by Boolean true 署名   creativeCommons.nc Boolean true 非商業   creativeCommons.nd Boolean true 禁止演繹   creativeCommons.sa Boolean true 相同方式共享   Code Block      codeBlock Object -    codeBlock.maxLines Integer 7    codeBlock.lineNos Boolean true true/false 表示默認情況下顯示/隱藏行號。   Post      post Object -    post.excerpt String Summary 可選項：description   post.excerptMaxLength Integer 320    viewer Boolean true 圖片查看器\r   pwa Object - 漸進式 web 應用\r   Meta Tag      metaRobots String - 空字符串表示禁用。   contact Object - 聯系表單\r   pinnedPost Boolean true 開啟/禁用文章置頂。   pinnedPostCount Integer 1 置頂的文章數量。     除了 Google 站長工具外，其他搜索引擎站長工具無法與 hugo --minify 同時使用，這是因為它們無法識別優化後的元標簽。\n 頁面參數\r 頁面參數位於 Front Matter\r。\n    名稱 類型 默認值 說明     Page      description String - 頁面描述   keywords Array - 頁面關鍵詞   comment Boolean true 是否開啟評論，如果評論已被全局關閉，該參數無效   toc Boolean true 是否開啟目錄，如果目錄已被全局關閉，該參數無效   math Boolean false 是否開啟 math   diagram Boolean false 是否開啟 diagram   reward Boolean true 是否開啟打賞   breadcrumb Boolean true 是否開啟面包屑導航   readingTime Boolean true 是否顯示閱讀時間   postDate Boolean true 是否顯示發表日期   Creative Commons License      creativeCommons Object -    creativeCommons.by Boolean true 署名   creativeCommons.nc Boolean true 非商業   creativeCommons.nd Boolean true 禁止演繹   creativeCommons.sa Boolean true 相同方式共享   Meta Tag      metaRobots String - 空字符串表示禁用。   pinned Boolean false 置頂文章。   ","date":"2021-11-27","img":"","permalink":"/zh-tw/posts/configuration/","series":["檔案"],"tags":[],"title":"配置概覽"},{"categories":["Markdown"],"content":"本文提供一些調整圖片大小和對齊圖片的用例。\n調整圖片大小\r我們利用 URL 的查詢字符串來調整圖片大小。\n指定寬度和保留比率\r1![Resize](images/sample.png?width=300px) \r指定高度和保留比率\r1![Resize](images/sample.png?height=200px) \r指定寬度和高度\r1![Resize](images/sample.png?width=300px\u0026amp;height=200px)  它不僅可以用於頁面資源\r，而且也適用於 static 圖像和外部圖像。 但是，除了頁面資源外，其他資源的大小都是按內聯樣式調整的，也就是說，它們的原始大小不會改變。\n 對齊圖像\r我們可以利用 URL 片段輕易地對齊圖像，比如：#center, #floatleft 和 #floatright 分別表示居中對齊、向左浮動和向右浮動。\n居中對齊\r添加 #center 使圖片居中對齊。\n舉個例子：![Center](/images/center.png#center)。\n向左浮動\r添加 #floatleft 使圖片向左浮動。\n舉個例子：![Float Left](/images/left.png#floatleft)。\n向右浮動\r同樣的，我們也可以添加 #floatright 使圖片向右浮動。\n舉個例子：![Float Right](/images/right.png#floatright)。\n","date":"2021-08-15","img":"/zh-tw/posts/image-processing/images/center.png","permalink":"/zh-tw/posts/image-processing/","series":["檔案"],"tags":["圖像"],"title":"圖像處理"},{"categories":[],"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings\rThe following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1\rH2\rH3\rH4\rH5\rH6\rParagraph\rXerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes\rThe blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution\r Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution\r Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.— Rob Pike1 Tables\rTables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables\r   Italics Bold Code     italics bold code    Code Blocks\rCode block with backticks\r1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5 \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8 \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode\r1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5 \u0026lt;title\u0026gt;Another Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8 \u0026lt;p\u0026gt;A looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong text\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;/html\u0026gt; List Types\rOrdered List\r First item Second item Third item  Unordered List\r List item Another item And another item  Nested List\r Fruit  Apple Orange Banana   Dairy  Milk Cheese    TODO List\r Done WIP  Other Elements — abbr, sub, sup, kbd, mark\rGIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk\rduring Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","date":"2020-11-09","img":"/images/markdown.png","permalink":"/zh-tw/posts/markdown-syntax/","series":["檔案"],"tags":["Markdown","CSS","HTML"],"title":"Markdown 語法指南"},{"categories":null,"content":"","date":"0001-01-01","img":"","permalink":"/zh-tw/offline/","series":null,"tags":null,"title":"Offline"},{"categories":null,"content":"","date":"0001-01-01","img":"","permalink":"/zh-tw/faq/","series":null,"tags":null,"title":"常見問題"},{"categories":null,"content":"","date":"0001-01-01","img":"","permalink":"/zh-tw/contact/","series":null,"tags":null,"title":"聯繫我們"}]